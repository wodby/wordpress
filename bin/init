#!/usr/bin/env bash

set -e

if [[ -n "${DEBUG}" ]]; then
    set -x
fi

src_dir="/usr/src/wordpress"

# Generate keys & salts
function generate_salt {
    # Generate random 60 character random string including a subset of special characters
    # Not including " or ' for output sanitization
    local NEW_SALT=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 60 | head -n 1)
    echo "$NEW_SALT"
}

if [[ ! -f "${APP_ROOT}/index.php" ]]; then
    echo "${APP_NAME} not found in ${APP_ROOT} - copying now..."
    rsync -a "${src_dir}/" "${APP_ROOT}/"
    echo "Complete! ${APP_NAME} has been successfully copied to ${APP_ROOT}"

    # docker4wordpress
    if [[ -z "${WODBY_APP_NAME}" ]]; then
        su-exec wodby cp "${APP_ROOT}/wp-config-sample.php" "${APP_ROOT}/wp-config.php"
        sed -i "s/database_name_here/${DB_NAME:-wordpress}/" "${APP_ROOT}/wp-config.php"
        sed -i "s/username_here/${DB_USER:-wordpress}/" "${APP_ROOT}/wp-config.php"
        sed -i "s/password_here/${DB_PASSWORD:-wordpress}/" "${APP_ROOT}/wp-config.php"
        sed -i "s/'DB_HOST', 'localhost'/'DB_HOST', '${DB_HOST:-mariadb}'/" "${APP_ROOT}/wp-config.php"
        sed -i "s/'DB_CHARSET', 'utf8'/'DB_CHARSET', '${DB_CHARSET:-utf8}'/" "${APP_ROOT}/wp-config.php"
        # Set the WordPress Filesystem Method (see: https://wordpress.org/support/article/editing-wp-config-php/#wordpress-upgrade-constants)
        # Accepted values are 'direct', 'ssh2', 'ftpext', 'ftpsockets', or 'false' to omit the constant and let WordPress decide.
        # Defaults to `define('FS_METHOD', 'direct')` if not FS_METHOD is not specified in .env.
        if [[ "${FS_METHOD}" != false ]]; then
            echo "define('FS_METHOD', '${FS_METHOD:-direct}');" >> "${APP_ROOT}/wp-config.php"
        fi
        # WordPress Authentication Unique Keys and Salts.
        # If .env variables are not available keys & salts are auto-generated
        sed -i "s/'AUTH_KEY',.*'/'AUTH_KEY', '$(echo ${WP_AUTH_KEY:-$(generate_salt)} | sed -e 's:\\:\\\\:g; s:\/:\\\/:g; s:&:\\\&:g')'/" "${APP_ROOT}/wp-config.php"
        sed -i "s/'SECURE_AUTH_KEY',.*'/'SECURE_AUTH_KEY', '$(echo ${WP_SECURE_AUTH_KEY:-$(generate_salt)} | sed -e 's:\\:\\\\:g; s:\/:\\\/:g; s:&:\\\&:g')'/" "${APP_ROOT}/wp-config.php"
        sed -i "s/'LOGGED_IN_KEY',.*'/'LOGGED_IN_KEY', '$(echo ${WP_LOGGED_IN_KEY:-$(generate_salt)} | sed -e 's:\\:\\\\:g; s:\/:\\\/:g; s:&:\\\&:g')'/" "${APP_ROOT}/wp-config.php"
        sed -i "s/'NONCE_KEY',.*'/'NONCE_KEY', '$(echo ${WP_NONCE_KEY:-$(generate_salt)} | sed -e 's:\\:\\\\:g; s:\/:\\\/:g; s:&:\\\&:g')'/" "${APP_ROOT}/wp-config.php"
        sed -i "s/'AUTH_SALT',.*'/'AUTH_SALT', '$(echo ${WP_AUTH_SALT:-$(generate_salt)} | sed -e 's:\\:\\\\:g; s:\/:\\\/:g; s:&:\\\&:g')'/" "${APP_ROOT}/wp-config.php"
        sed -i "s/'SECURE_AUTH_SALT',.*'/'SECURE_AUTH_SALT', '$(echo ${WP_SECURE_AUTH_SALT:-$(generate_salt)} | sed -e 's:\\:\\\\:g; s:\/:\\\/:g; s:&:\\\&:g')'/" "${APP_ROOT}/wp-config.php"
        sed -i "s/'LOGGED_IN_SALT',.*'/'LOGGED_IN_SALT', '$(echo ${WP_LOGGED_IN_SALT:-$(generate_salt)} | sed -e 's:\\:\\\\:g; s:\/:\\\/:g; s:&:\\\&:g')'/" "${APP_ROOT}/wp-config.php"
        sed -i "s/'NONCE_SALT',.*'/'NONCE_SALT', '$(echo ${WP_NONCE_SALT:-$(generate_salt)} | sed -e 's:\\:\\\\:g; s:\/:\\\/:g; s:&:\\\&:g')'/" "${APP_ROOT}/wp-config.php"
    fi
else
    latest_ver=$(su-exec wodby wp core version --path="${src_dir}")
    current_ver=$(su-exec wodby wp core version --path="${APP_ROOT}")

    res=$(compare_semver "${latest_ver}" "${current_ver}" ">")

    if [[ "${res}" == 0 ]]; then
        echo "Current version of ${APP_NAME} is outdated (${current_ver}), updating to ${latest_ver}..."
        rsync -a "${src_dir}/" "${APP_ROOT}/"
        echo "Complete! ${APP_NAME} has been successfully updated to ${latest_ver}"
    fi
fi
